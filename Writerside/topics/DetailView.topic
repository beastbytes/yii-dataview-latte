<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="DetailView" id="DetailView">

    <p>
        The <b>detailView</b> tag represents a
        <a href="https://github.com/yiisoft/yii-dataview/blob/master/src/DetailView.php">DetailView widget</a>>.
        It displays the details for an associative array or an abject;
        <b>dataField</b> tags determine which fields are displayed.
    </p>

    <chapter title="Parameters" id="parameters">
        <p>
            The <b>detailView</b> tag has one parameter: an associative array or an object
            that contains the details to be displayed.
        </p>

        <table>
            <tr>
                <td>Parameter</td>
                <td>Type</td>
                <td>Description</td>
            </tr>
            <tr>
                <td>$data</td>
                <td>array(string, mixed)|object</td>
                <td>The data whose details are to be displayed.</td>
            </tr>
        </table>
    </chapter>

    <chapter title="Configuration" id="configuration">
        <p>
            The <b>detailView</b> tag can be configured using the Latte filter syntax.
            A configuration <i>filter</i> has the name of the DetailView configuration method
            and accepts the same type as the method's parameter;
            e.g. <code>{detailView $data|header: 'User Details'}</code> will set the header of the DetailView.
            The exception is methods that have variable-length argument lists; these must be passed as an array.
        </p>
    </chapter>

    <chapter title="Usage" id="usage">
        <p>
            The <b>detailView</b> tag encloses <b>dataField</b> tags.
        </p>

        <code-block lang="latte">
            {varType array|object $data}

            {detailView $data|header: 'User Details'}
                {dataField 'id'}
                {dataField 'username'}
                {dataField 'email'}
                {dataField label: 'Created At', value: fn($data) => date('Y-m-d', $data->created_at)}
            {/detailView}
        </code-block>
    </chapter>
</topic>